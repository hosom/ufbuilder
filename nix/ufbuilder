#!/bin/bash

WD=$(pwd)

BUILD_DIR="uf_build"
PHONE_HOME_INT="60"

Help()
{
    echo "Build a Splunk UF Package for *nix Deployments."
    echo
    echo "Syntax: ufbuilder [-h] base_package deployserver"
    echo
    echo "base_package  path to the Splunk provided base tar ball"
    echo "deployserver  address and port of the deployment server"
    echo "h             print help"
    echo "b             build directory"
}

Cleanup()
{
    rm -rf $BUILD_DIR
    rm -rf .temp
}

while getopts ":hbp:" option; do
    case $option in
        h) # display help message
        Help
        exit;;
        b) BUILD_DIR=$OPTARG;;
        p) PHONE_HOME_INT=$OPTARG;;
        \?) # invalid option
        echo "Error: invalid option specified"
        exit;;
    esac
done

SPLUNK_PACKAGE=${@:OPTIND:1}
DEPLOYMENT_SERVER=${@:OPTIND+1:1}


if [ ! -d $BUILD_DIR ]; then
    mkdir $BUILD_DIR
fi 

if [ $? -ne 0 ]; then
    echo "Error creating build directory ${BUILD_DIR}"
    Cleanup
    exit 1
fi

# use openssl to generate the default password for the admin account
# this is done so that not even the admins know this password
GENPASS=$(openssl rand -base64 32)

# unpack the Splunk package to be modified into the build directory
tar xzf $SPLUNK_PACKAGE -C $BUILD_DIR
if [ $? -ne 0 ]; then
    echo "Failed to decompress ${SPLUNk_PACKAGE}"
    Cleanup
    exit 1
fi

# extract splunk to a temporary location so that we can be sure that
# we don't accidentally create configuration data that shouldn't exist
# in the final package

if [ ! -d .temp ]; then
    mkdir .temp
fi

if [ $? -ne 0 ]; then
    echo "Error creating temporary directory."
    Cleanup
    exit 1
fi

tar xzf $SPLUNK_PACKAGE -C .temp
if [ $? -ne 0 ]; then
    echo "Failed to decompress ${SPLUNk_PACKAGE}"
    Cleanup
    exit 1
fi

# hash the randomly generated password with splunk's hash-passwd utility
PHASH=$(./.temp/splunkforwarder/bin/splunk hash-passwd "${GENPASS}")
rm -rf .temp

# create the user-seed.conf file
cat > $BUILD_DIR/splunkforwarder/etc/system/local/user-seed.conf << EOL
## this file is automatically generated by ufbuilder
[user_info]
USERNAME = admin
HASHED_PASSWORD=${PHASH}
EOL
if [ $? -ne 0 ]; then
    echo "Failed to create user-seed.conf"
    Cleanup
    exit 1
fi

# create the deploymentclient.conf file
cat > $BUILD_DIR/splunkforwarder/etc/system/local/deploymentclient.conf << EOL
## this file is automatically generated by ufbuilder
[deployment-client]
## set the phone-home interval
phoneHomeIntervalInSecs = ${PHONE_HOME_INT}

[target-broker:deploymentServer]
targetUri = ${DEPLOYMENT_SERVER}
EOL
if [ $? -ne 0 ]; then
    echo "Failed to create deploymentclient.conf"
    Cleanup
    exit 1
fi

# build the package
cd $BUILD_DIR
tar czf splunkforwarder.tgz splunkforwarder
if [ $? -ne 0 ]; then
    echo "Failed to compress Splunk UF package."
    Cleanup
    exit 1
fi

mv splunkforwarder.tgz $WD/splunkforwarder.tgz
cd $WD

Cleanup